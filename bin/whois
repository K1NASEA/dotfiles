#!/usr/bin/env bash

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Treat unset variables as errors.

COLOR_RED="\033[1;31m"
COLOR_GREEN="\033[1;32m"
COLOR_YELLOW="\033[1;33m"
COLOR_BLUE="\033[1;34m"
COLOR_PURPLE="\033[1;35m"
COLOR_GRAY="\033[1;30m"
COLOR_NONE="\033[0m"

usage() {
  echo -e $"\nUsage: $(basename "$0") [-v] {IP or Domain}\n"
  exit 1
}

title() {
  echo -e "\n${COLOR_PURPLE}$1${COLOR_NONE}"
  echo -e "${COLOR_GRAY}==============================${COLOR_NONE}\n"
}

error() {
  echo -e "${COLOR_RED}Error: ${COLOR_NONE}$1"
  exit 1
}

warning() {
  echo -e "${COLOR_YELLOW}Warning: ${COLOR_NONE}$1"
}

info() {
  echo -e "${COLOR_BLUE}Info: ${COLOR_NONE}$1"
}

success() {
  echo -e "${COLOR_GREEN}$1${COLOR_NONE}"
}

if [ $# -lt 1 ] || [ $# -gt 2 ]; then
  usage
fi

VERBOSE=false

while getopts ":v" option; do
  case $option in
  v)
    VERBOSE=true
    shift
    ;;
  *)
    usage
    ;;
  esac
done

RESPONSE=$(curl --silent --show-error --fail "https://api.whoisproxy.info/whois/${1}") || exit $?

if [ "$VERBOSE" = true ]; then
  echo "$RESPONSE" | jq '.'
else
  echo "$RESPONSE" | jq -r '.results.raw[]' | while IFS= read -r line; do
    if [ -z "$line" ]; then
      echo -en "${COLOR_GRAY}"
    fi
    echo "$line"
  done
  echo -en "$COLOR_NONE"
fi
